name: Build and Release PlatypusGui

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Upload Artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    # Get dependencies
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v1
      with:
        cmake-version: '3.16'

    - name: Install Qt
      if : matrix.os != 'macos-latest'
      uses: jurplel/install-qt-action@v4
      with:
        cache: true

    ## Linux setup ##
    - name: Install dependencies on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libopencv-dev libxcb1-dev

    # 3. Configure CMake
    - name: Configure CMake
      if : matrix.os == 'ubuntu-latest'
      run: cmake -B build -S . -G Ninja -DCMAKE_BUILD_TYPE=Release
    ## End Linux setup ##

    ## macOS setup ##
    - name: Install dependencies on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install opencv qt@5

    # Configure CMake for macOS
    - name: Configure CMake (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        export PATH="/opt/homebrew/opt/qt@5/bin:$PATH"
        cmake -B build -S . -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=arm64
    ## End macOS setup ##

    # 4. Build the project
    - name: Build PlatypusGui
      run: cmake --build build --config Release --target PlatypusGui

    - name: Deploy Qt Dependencies (mac)
      if: matrix.os == 'macos-latest'
      run: |
        export PATH="/opt/homebrew/opt/qt@5/bin:$PATH"
        macdeployqt ./build/PlatypusGui.app -verbose=3  -always-overwrite -hardened-runtime -timestamp

    # After macdeployqt
    #- name: Deploy OpenCV Libraries
    #  if: matrix.os == 'macos-latest'
    #  run: |
    #    chmod +x ./scripts/deploy_opencv.sh
    #    ./scripts/deploy_opencv.sh

    # 6. Upload artifacts for release
    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-platypus
        path: |
          build/PlatypusGui.app
          build/PlatypusGui

